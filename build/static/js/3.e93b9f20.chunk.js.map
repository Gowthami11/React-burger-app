{"version":3,"sources":["components/Order/Checkoutsummary/Checkoutsummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Burger/UI/Input/Input.js","components/Burger/UI/Input/Input.css","components/Order/Checkoutsummary/Checkoutsummary.css","containers/Checkout/ContactData/ContactData.css"],"names":["checkoutsummary","props","react_default","a","createElement","className","classes","Checkoutsummary","style","width","align","Burger","ingredients","Button","btnType","clicked","checkoutcontinue","checkoutcancelled","ContactData","state","orderForms","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","code","minlength","maxlen","country","mail","deliveryMethod","options","displayValue","formIsValid","inputChangeHandler","event","InputIdentifier","UpdatedOrderForm","Object","objectSpread","_this","UpdatedFormELement","target","checkValidity","eachItem","setState","orderHandler","preventDefault","formData","formingredient","order","ings","price","orderData","userId","onOrderBurger","token","rules","isValid","trim","length","isEmail","test","isNumeric","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","ig","Input","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerred","totalprice","authred","dispatch","orderdata","actions","withErrorHandler","axios","Checkout","history","replace","goBack","summary","react_router","to","purchasedRedirect","purchased","Checkoutsummary_Checkoutsummary","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputelement","validationError","inputclass","Inputelement","Invalid","assign","join","onChange","option","label","module","exports","Label"],"mappings":"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","file":"static/js/3.e93b9f20.chunk.js","sourcesContent":["import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../Burger/UI/Button/Button'\r\nimport classes from './Checkoutsummary.css'\r\nconst checkoutsummary=props=>{\r\n    return(\r\n<div className={classes.Checkoutsummary}>\r\n        <h1>Hope your Burger tastes good</h1>  \r\n        <div style={{width:'100px', align:'center'}}>\r\n            <Burger ingredients={props.ingredients}/>\r\n        </div>\r\n   <Button btnType=\"Success\" clicked={props.checkoutcontinue}>Continue</Button>\r\n   <Button btnType=\"Danger\" clicked={props.checkoutcancelled}>Cancel</Button>      \r\n        </div>\r\n        )\r\n}\r\n\r\nexport default checkoutsummary","import React,{Component} from 'react'\r\nimport classes from './ContactData.css'\r\nimport Button from '../../../components/Burger/UI/Button/Button'\r\nimport axios from '../../../axis-orders'\r\nimport Spinner from '../../../components/Burger/UI/Spinner/Spinner'\r\nimport Input from '../../../components/Burger/UI/Input/Input'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../../store/actions/index'\r\nclass ContactData extends Component{\r\n    state={\r\n        orderForms:{\r\n    name:{\r\n\r\n        elementType:'input',\r\n        elementConfig:{\r\n           type:'text',\r\n           placeholder:'your Name'\r\n        },\r\n        value:'',\r\n        validation:{\r\n            required:true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n\r\n        },\r\n street:{\r\n    elementType:'input',\r\n    elementConfig:{\r\n       type:'text',\r\n       placeholder:'your Street'\r\n        },\r\n        value:'',\r\n        validation:{\r\n            required:true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n    \r\n    },\r\n   code:{\r\n    elementType:'input',\r\n    elementConfig:{\r\n       type:'text',\r\n       placeholder:'your Zipcode'\r\n        },\r\n    value:''\r\n\r\n    ,\r\n    validation:{\r\n        required:true,\r\n        minlength:5,\r\n        maxlen:15\r\n    },\r\n    valid:false,\r\n    touched:false\r\n},\r\n  country:{\r\n    elementType:'input',\r\n    elementConfig:{\r\n       type:'text',\r\n       placeholder:'your Country'\r\n        },\r\n    value:'',\r\n    validation:{\r\n        required:true,\r\n        minlength:5,\r\n        maxlen:15\r\n    },\r\n    valid:false,\r\n    touched:false\r\n\r\n},            \r\nmail:{\r\n    elementType:'input',\r\n    elementConfig:{\r\n       type:'email',\r\n       placeholder:'your mail'\r\n        },\r\n    value:'',\r\n    validation:{\r\n        required:true,\r\n      \r\n    },\r\n    valid:false,\r\n    touched:false\r\n},      \r\ndeliveryMethod:{\r\n    elementType:'select',\r\n    elementConfig:{\r\n      options:[{value:'fastest', displayValue:'Fastest'},\r\n      {value:'Cheapest', displayValue:'Cheapest'}\r\n    ]\r\n      \r\n                   },\r\n        value:'fastest',\r\n        validation:{}\r\n          \r\n        ,\r\n        valid:true //adding valid in fropdown just to make formIsValid as true, if not showing undefined\r\n    }\r\n\r\n}\r\n        ,\r\n        \r\n        formIsValid:false\r\n    }\r\n\r\n    checkValidity(value,rules){ // here rules gets validation:{}\r\n        let isValid=true; //for all if to combinly work , put isvalid -=true and use &&\r\n\r\n        \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid=value.trim()!==''&& isValid\r\n        }\r\n\r\n        if(rules.minlength){\r\n            isValid=value.length>=rules.minlength && isValid\r\n        }\r\n\r\n       \r\n        if(rules.maxlen){\r\n            isValid=value.length<=rules.maxlen&&isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        \r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangeHandler=(event,InputIdentifier)=>{ //we should mutate immutably instead of using this.value, use setstate() video 26-->3:50\r\n        const UpdatedOrderForm={...this.state.orderForms}\r\n        const UpdatedFormELement={...UpdatedOrderForm[InputIdentifier]}\r\n       \r\n//cloning deeply to change values\r\n\r\nUpdatedFormELement.value=event.target.value;\r\nUpdatedFormELement.valid=this.checkValidity(UpdatedFormELement.value,UpdatedFormELement.validation);\r\nUpdatedFormELement.touched=true\r\n//console.log(UpdatedFormELement)\r\nlet formIsValid=true;\r\nUpdatedOrderForm[InputIdentifier]=UpdatedFormELement;\r\nfor(let eachItem in UpdatedOrderForm){\r\n    formIsValid=UpdatedOrderForm[eachItem].valid && formIsValid;\r\n    \r\n}\r\n\r\n//console.log(formIsValid)\r\nthis.setState({\r\n    orderForms:UpdatedOrderForm,\r\n    formIsValid:formIsValid\r\n})\r\n\r\n    }\r\n\r\n    orderHandler=(event)=>{\r\n        event.preventDefault();\r\n       \r\n        const formData={};\r\n        for(let formingredient in this.state.orderForms)\r\n        {\r\n            formData[formingredient]=this.state.orderForms[formingredient].value;//name:'gow'\r\n        }\r\n       // console.log('ingredients')\r\n       // console.log(this.props.ingredients)// this ingrediebts from chekout dnt print until ingredients are declared in state here\r\n         //alert(\"you purchasing a burger\")\r\n        \r\n        const order={\r\n            ingredients:this.props.ings,\r\n            price:this.props.price,\r\n        orderData:formData,\r\n        userId:this.props.userId}\r\n           \r\n       this.props.onOrderBurger(this.props.token,order)\r\n      //  console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray=[];\r\n        for(let key in this.state.orderForms)\r\n        {\r\n            formElementsArray.push({id:key,config:this.state.orderForms[key]})\r\n        }\r\n\r\n       \r\n\r\n        let form =(<form onSubmit={this.orderHandler}>\r\n            {/* <Input elementType=\"...\" elementConfig=\"...\" value=\"...\"/><br/> */}\r\n            { formElementsArray.map(ig=>(\r\n            <Input key={ig.id}\r\n            elementType={ig.config.elementType} \r\n            invalid={!ig.config.valid}\r\n            elementConfig={ig.config.elementConfig} \r\n            shouldValidate={ig.config.validation}\r\n            touched={ig.config.touched}\r\n            value={ig.config.value} changed={(event)=>{this.inputChangeHandler(event,ig.id)}}/>\r\n        ))\r\n            }\r\n             <Button btnType=\"Success\" disabled={!this.state.formIsValid} >Order</Button>   {/* ig.key is name, email etc\r\n           <Input elementType=\"\" elementConfig=\"\" value=\"\"/><br/>\r\n            <Input elementType=\"\" elementConfig=\"\" value=\"\"/><br/> */}\r\n            {/* <Button btnType=\"Success\" clicked={this.orderHandler}>Order</Button>\r\n            </form>)*/}\r\n            </form>)\r\n             // change to anonyms fuction to pass arguments \r\n\r\n            if(this.props.loading)\r\n            form=   <Spinner/>\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h3>Please enter your contact details</h3>\r\n                {form}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        ings:state.burgerred.ingredients,\r\n        price:state.burgerred.totalprice,\r\n        loading:state.order.loading,\r\n        token:state.authred.token,\r\n        userId:state.authred.userId\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onOrderBurger:(token,orderdata)=>dispatch(actions.purchaseBurger(token,orderdata))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React,{Component} from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport Checkoutsummary from '../../components/Order/Checkoutsummary/Checkoutsummary'\r\nimport ContactData from './ContactData/ContactData'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Checkout extends Component{\r\n    // componentWilMmount(){\r\n    //     this.props.onInitPurchase();\r\n    // }\r\n   \r\n    checkoutcontinue=()=>{\r\n        this.props.history.replace('/checkout/contact-data');\r\n        \r\n       \r\n    }\r\n\r\n    checkoutcancelled=()=>{\r\n       \r\n        this.props.history.goBack();  \r\n    }\r\n    \r\n\r\n    render(){\r\n        let summary=<Redirect to=\"/\"/>\r\n        if(this.props.ings){\r\n            const purchasedRedirect=this.props.purchased?<Redirect to=\"/\"/>:null;\r\n            summary=(<div>  \r\n                {purchasedRedirect}  \r\n                <Checkoutsummary ingredients={this.props.ings} \r\n             checkoutcancelled={this.checkoutcancelled} \r\n             checkoutcontinue={this.checkoutcontinue}/>\r\n             <Route path={this.props.match.path+'/contact-data'} component={ContactData}/>\r\n            {/* here compoent should be snmall only, if not wont navigat */}\r\n             {/* // this props will have hitory */}\r\n                </div>)\r\n        }\r\n        return summary\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        ings:state.burgerred.ingredients,\r\n        purchased:state.order.purchased\r\n        //price:state.totalprice\r\n    }\r\n}\r\n\r\n// const MapDispatchToProps=dispatch=>{// as willmount nd this creating prblm while ordering again after ordering first. going to / instead of showing orderform\r\n//     return{\r\n//        onInitPurchase:()=>dispatch(actions.purchaseInit()) \r\n//         //price:state.totalprice\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nconst input=props=>{\r\nlet inputelement=null;\r\nlet validationError=null\r\nconst inputclass=[classes.Inputelement];\r\nif(props.invalid && props.shouldValidate && props.touched){\r\n    validationError = <p>Please enter a valid value!</p>;   \r\n    inputclass.push(classes.Invalid)\r\n}\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputelement=<input className={inputclass.join(' ')}  value={props.value} {...props.elementConfig} onChange={props.changed}/>\r\n        break;\r\n        case('textarea'):\r\n        inputelement=<textarea className={inputclass.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n        break;\r\n\r\n        case('select'):\r\n        inputelement=(<select \r\n        className={inputclass.join(' ')} \r\n        value={props.value}\r\n        onChange={props.changed}> \r\n            {props.elementConfig.options.map(option=>(\r\n                <option key={option.value}  // due to puttng ONchnage here, select dint work\r\n               \r\n                value={option.value} >{option.displayValue}</option>\r\n            ))}\r\n           \r\n             </select>);\r\n        break;\r\n        default:\r\n        inputelement=<input className={inputclass.join(' ')} {...props.elementConfig}\r\n        value={props.value} onChange={props.changed}/>   \r\n     }\r\n    return (\r\n       <div className={classes.Input}>\r\n           <label className={classes.Input}>{props.label}</label>\r\n           {inputelement}\r\n          { validationError}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__-hash-64-5-\",\"Label\":\"Input__Label__-hash-64-5-\",\"Inputelement\":\"Input__Inputelement__-hash-64-5-\",\"Invalid\":\"Input__Invalid__-hash-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkoutsummary\":\"Checkoutsummary__Checkoutsummary__-hash-64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__-hash-64-5-\"};"],"sourceRoot":""}