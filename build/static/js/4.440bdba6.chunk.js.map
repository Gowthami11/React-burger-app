{"version":3,"sources":["containers/Auth/Auth.css","containers/Auth/Auth.js","components/Burger/UI/Input/Input.js","components/Burger/UI/Input/Input.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minlength","isSignUp","switchSignUpHandler","_this","setState","prevState","inputChangeHandler","event","controlName","updateControls","Object","C_Users_gowthamip_Desktop_React_burgerapp_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_gowthamip_Desktop_React_burgerapp_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","submitHandler","preventDefault","props","onAuth","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","rules","isValid","trim","length","maxlen","test","isNumeric","_this2","formElementsArray","key","push","id","config","form","map","ig","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Burger_UI_Input_Input__WEBPACK_IMPORTED_MODULE_8__","invalid","shouldValidate","changed","loading","_components_Burger_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__","errormsg","error","message","authredirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","className","classes","onSubmit","_components_Burger_UI_Button_Button__WEBPACK_IMPORTED_MODULE_9__","btnType","clicked","Component","connect","authred","token","burgerred","building","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputelement","validationError","inputclass","Inputelement","Invalid","assign","join","onChange","options","option","displayValue","Input","label","Label"],"mappings":"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","file":"static/js/4.440bdba6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__-hash-64-5-\"};","import React,{Component} from 'react'\r\nimport Input  from '../../components/Burger/UI/Input/Input'\r\nimport Button  from '../../components/Burger/UI/Button/Button'\r\nimport classes from './Auth.css'\r\nimport * as actions from '../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/Burger/UI/Spinner/Spinner'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Auth extends Component {\r\n\r\n    state={\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your Mail address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n                 },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Your password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minlength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        \r\n            isSignUp:true\r\n    }\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath!=='/'){\r\n           // console.log(this.props.buildingBurger+'and '+this.props.authRedirectPath)\r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n    switchSignUpHandler=()=>{\r\n        this.setState(prevState=>{\r\n            return{isSignUp:!prevState.isSignUp}\r\n        })\r\n    }\r\n    checkValidity(value,rules){ // here rules gets validation:{}\r\n        let isValid=true; //for all if to combinly work , put isvalid -=true and use &&\r\n\r\n        \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid=value.trim()!==''&& isValid\r\n        }\r\n\r\n        if(rules.minlength){\r\n            isValid=value.length>=rules.minlength && isValid\r\n        }\r\n\r\n       \r\n        if(rules.maxlen){\r\n            isValid=value.length<=rules.maxlen&&isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        \r\n\r\n        return isValid;\r\n    }\r\n    inputChangeHandler=(event,controlName)=>{\r\n        const updateControls={\r\n            ...this.state.controls,\r\n        [controlName]:{\r\n            ...this.state.controls[controlName],\r\n            value:event.target.value,\r\n            valid:this.checkValidity(event.target.value,this.state.controls[controlName].validation),// validation is rules\r\n            touched:true\r\n        }}\r\n        this.setState({\r\n            controls:updateControls\r\n        })\r\n    }\r\n    submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp)\r\n    }\r\n    render() {\r\n        const formElementsArray=[]\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            })\r\n        }\r\n        let form=formElementsArray.map(ig=>(\r\n            <Input key={ig.id}\r\n            elementType={ig.config.elementType} \r\n            invalid={!ig.config.valid}\r\n            elementConfig={ig.config.elementConfig} \r\n            shouldValidate={ig.config.validation}\r\n            touched={ig.config.touched}\r\n            value={ig.config.value} changed={(event)=>{this.inputChangeHandler(event,ig.id)}}/>\r\n        ))\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }\r\n        let errormsg=null\r\n        if(this.props.error){\r\n            errormsg=(<p>{this.props.error.message}</p>)\r\n        }\r\n        let authredirect=null\r\n        if(this.props.isAuthenticated){\r\n            \r\n            authredirect=<Redirect to={this.props.authRedirectPath}/>\r\n           \r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authredirect}\r\n                {errormsg}\r\n                <form onSubmit={this.submitHandler}>\r\n              {form} \r\n             \r\n              <Button btnType=\"Success\">SUBMIT</Button> <br/> </form>\r\n                <Button clicked={this.switchSignUpHandler} btnType=\"Danger\">SWITCH TO {this.state.isSignUp?'SIGNIN':'SIGNUP'}</Button>\r\n             \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        loading:state.authred.loading,\r\n        error:state.authred.error,\r\n        isAuthenticated:state.authred.token!==null,\r\n        buildingBurger:state.burgerred.building,\r\n        authRedirectPath:state.authred.authRedirectPath\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onAuth:(email,password,isSignUp)=>dispatch(actions.auth(email,password,isSignUp)),\r\n        onSetAuthRedirectPath:()=>dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)","import React from 'react';\r\nimport classes from './Input.css'\r\n\r\nconst input=props=>{\r\nlet inputelement=null;\r\nlet validationError=null\r\nconst inputclass=[classes.Inputelement];\r\nif(props.invalid && props.shouldValidate && props.touched){\r\n    validationError = <p>Please enter a valid value!</p>;   \r\n    inputclass.push(classes.Invalid)\r\n}\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputelement=<input className={inputclass.join(' ')}  value={props.value} {...props.elementConfig} onChange={props.changed}/>\r\n        break;\r\n        case('textarea'):\r\n        inputelement=<textarea className={inputclass.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n        break;\r\n\r\n        case('select'):\r\n        inputelement=(<select \r\n        className={inputclass.join(' ')} \r\n        value={props.value}\r\n        onChange={props.changed}> \r\n            {props.elementConfig.options.map(option=>(\r\n                <option key={option.value}  // due to puttng ONchnage here, select dint work\r\n               \r\n                value={option.value} >{option.displayValue}</option>\r\n            ))}\r\n           \r\n             </select>);\r\n        break;\r\n        default:\r\n        inputelement=<input className={inputclass.join(' ')} {...props.elementConfig}\r\n        value={props.value} onChange={props.changed}/>   \r\n     }\r\n    return (\r\n       <div className={classes.Input}>\r\n           <label className={classes.Input}>{props.label}</label>\r\n           {inputelement}\r\n          { validationError}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__-hash-64-5-\",\"Label\":\"Input__Label__-hash-64-5-\",\"Inputelement\":\"Input__Inputelement__-hash-64-5-\",\"Invalid\":\"Input__Invalid__-hash-64-5-\"};"],"sourceRoot":""}