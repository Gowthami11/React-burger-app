{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","margin","display","border","padding","key","className","classes","price","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order_Order","id","Component","connect","state","authred","dispatch","actionTypes","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,+ICiCHC,EA/BF,SAACC,GACV,IAAMC,EAAY,GAClB,IAAI,IAAIC,KAAkBF,EAAMC,YAE5BA,EAAYE,KAAK,CACbC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAEjC,IAAMI,EAAiBL,EAAYM,IAAI,SAAAC,GACnC,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAChBC,cAAc,aAChBC,OAAQ,WACLC,QAAQ,eACTC,OAAO,iBACPC,QAAQ,OACdC,IAAKV,EAAGJ,MAAOI,EAAGJ,KANT,IAMgBI,EAAGH,OANnB,OAUd,OACGI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACxBW,EAAAC,EAAAC,cAAA,0BAAkBL,GAClBG,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,oBAAYX,EAAMqB,kDClBzBC,8LAIAC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAMF,KAAKvB,MAAM0B,yCAInD,IAAIC,EAAOlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MASX,OARIL,KAAKvB,MAAM6B,UACfF,EAAOJ,KAAKvB,MAAM2B,OAAOpB,IAAI,SAAAR,GAAK,OAAIU,EAAAC,EAAAC,cAACmB,EAAD,CAAOZ,IAAKnB,EAAMgC,GAEjDV,MAAOtB,EAAMsB,MACbpB,YAAaF,EAAME,iBAKtBQ,EAAAC,EAAAC,cAAA,eAAOgB,EAAP,aAlBSK,aAwCFC,sBAhBG,SAACC,GACnB,MAAM,CACHP,OAAOO,EAAMnC,MAAM4B,OACnBE,QAAQK,EAAMnC,MAAM8B,QACpBJ,MAAMS,EAAMC,QAAQV,MACpBC,OAAOQ,EAAMC,QAAQT,SAIH,SAACU,GACtB,MAAM,CACFZ,cAAc,SAACC,EAAMC,GAAP,OAAgBU,EAASC,IAAwBZ,EAAMC,OAK1DO,CAA4CK,YAAiBhB,EAAOiB","file":"static/js/5.b9a7a2c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__-hash-64-5-\"};","import React from 'react'\r\nimport classes from './Order.css';\r\n\r\nconst order =(props)=> {\r\n    const ingredients=[];\r\n    for(let ingredientName in props.ingredients)\r\n    {\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]})\r\n    }\r\n    const ingredientOutput=ingredients.map(ig=>{\r\n        return <span style={{ \r\n            textTransform:'Capitalize',\r\n          margin: '0px 8px ',// margin is giving space bw diff boxes\r\n             display:'inline-block',\r\n            border:'1px solid #ccc',\r\n            padding:'5px'\r\n    }}key={ig.name}>{ig.name}({ig.amount})</span>\r\n    })\r\n\r\n    \r\n return(\r\n    <div className={classes.Order}>\r\n    <p> ingredients: {ingredientOutput}</p>\r\n    <p>Price:<strong>Rs:{props.price}</strong></p>\r\n  \r\n   \r\n    \r\n</div>\r\n )\r\n        \r\n\r\n};\r\nexport default order \r\n","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axis-orders'\r\nimport {connect} from 'react-redux'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actionTypes from '../../store/actions/index'\r\nimport Spinner from '../../components/Burger/UI/Spinner/Spinner'\r\nclass Orders extends Component {\r\n   \r\n\r\n    componentDidMount(){\r\n      this.props.onFetchOrders(this.props.token,this.props.userId)\r\n       \r\n    }\r\n    render() {\r\n        let orders=<Spinner/>\r\n        if(!this.props.loading){\r\n        orders=this.props.orders.map(order=>( <Order key={order.id}\r\n               \r\n               price={order.price} // adding +order.price makes it as number from string\r\n               ingredients={order.ingredients}/>\r\n        )   \r\n            )\r\n        }\r\n        return (\r\n            <div> {orders}  </div>\r\n          \r\n        )\r\n        }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n       orders:state.order.orders,\r\n       loading:state.order.loading,\r\n       token:state.authred.token,\r\n       userId:state.authred.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        onFetchOrders:(token,userId)=>dispatch(actionTypes.fetchOrders(token,userId))\r\n    }\r\n}\r\n\r\n\r\n    export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios))\r\n"],"sourceRoot":""}